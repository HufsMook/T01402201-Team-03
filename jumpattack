using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class jumpAttack : MonoBehaviour
{
    private int nextPattern = 0;
    private int direction = -1;
    private Rigidbody2D rigid2D;
    private Animator animator;
    private GameObject player;

    private static readonly int NONE = 0;
    private static readonly int JUMP = 1;
    private static readonly int THROW = 2;
    private static readonly int ICICLE = 3;

    public GameObject shadowPrefab;
    private int Hp = 10;

    void lookPlayer() //Player 쪽으로 시선 설정
    {
        direction = (player.GetComponent<Transform>().position.x < transform.position.x ? -1 : 1);
        float scale = transform.localScale.z;
        transform.localScale = new Vector3(direction * -1 * scale, scale, scale);
    }
    void nextPatternPLay()
    {
        switch (nextPattern)
        {
            case 1:
                StartCoroutine(jump());
                break;
            case 0:
                if (0 == Random.Range(0, 2)) nextPattern = JUMP;
                else nextPattern = ICICLE;
                break;
        }
    }


    IEnumerator jump()
    {
        lookPlayer();
        //animator.SetTrigger("jumpReady");

        yield return new WaitForSeconds(1);

        rigid2D.velocity = new Vector2(0, 100);

        //animator.SetTrigger("jumpUp");

        GameObject shadow;

        while (true)
        {

            if (transform.position.y >= 50)
            {
               // animator.SetTrigger("jumpDown");
                rigid2D.velocity = new Vector2(0, 0);
                break;
            }
            yield return new WaitForSeconds(0.1f);
        }

        float playerXPosition = player.GetComponent<Transform>().position.x;
        if (playerXPosition > 5.5f)
        {
            transform.position = new Vector3(5.5f, 99, transform.position.z);
        }
        else if (playerXPosition < -6)
        {
            transform.position = new Vector3(-6, 99, transform.position.z);
        }
        else
        {
            transform.position = new Vector3(player.GetComponent<Transform>().position.x, 99, transform.position.z);
            rigid2D.velocity = new Vector2(0, -1);
        }

        shadow = Instantiate(shadowPrefab, new Vector3(transform.position.x, -4, -3), Quaternion.Euler(0f, 20f, 0f)) as GameObject; //그림자 생성 부분
        shadow.GetComponent<Transform>().localScale = new Vector3(0, 0, 0);

        while (true)
        {
            float scale = 0.6f * (1 - ((3 + transform.position.y) / 103));
            shadow.GetComponent<Transform>().localScale = new Vector3(scale, scale, scale);

            if (rigid2D.velocity.y == 0)
            {
                Destroy(shadow);
               // animator.SetTrigger("jumpEnd");
                break;
            }
            yield return new WaitForSeconds(0.1f);
        }

        if (0 == Random.Range(0, 2)) nextPattern = ICICLE; 
        else nextPattern = JUMP;

        yield return new WaitForSeconds(3);
        nextPatternPLay();
    }

    void Start()
    {
        this.player = GameObject.FindWithTag("Player");
        this.rigid2D = GetComponent<Rigidbody2D>();
        this.animator = GetComponent<Animator>();
        StartCoroutine(jump());
    }

    void Update()
    {
        if(Hp == 0)
        {
            Destroy(gameObject);
        }
    }
}

    
